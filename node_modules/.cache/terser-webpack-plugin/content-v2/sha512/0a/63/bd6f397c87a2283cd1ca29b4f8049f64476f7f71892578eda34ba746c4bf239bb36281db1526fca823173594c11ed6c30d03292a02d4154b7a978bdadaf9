{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{203:function(a,t,s){\"use strict\";s.r(t);var n=s(0),e=Object(n.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"regexp\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#regexp\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" RegExp\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"\\\\d匹配一个数字\")]),a._v(\" \"),s(\"li\",[a._v(\"\\\\w匹配一个字母或数字\")]),a._v(\" \"),s(\"li\",[a._v(\".匹配任意字符\")]),a._v(\" \"),s(\"li\",[a._v(\"*表示任意个字符（包括0个）\")]),a._v(\" \"),s(\"li\",[a._v(\"+表示至少一个字符\")]),a._v(\" \"),s(\"li\",[a._v(\"?表示0个或1个字符\")]),a._v(\" \"),s(\"li\",[a._v(\"{n}表示n个字符\")]),a._v(\" \"),s(\"li\",[a._v(\"{n,m}表示n-m个字符\")]),a._v(\" \"),s(\"li\",[a._v(\"\\\\s匹配一个空格（包括tab等空白符）\")])]),a._v(\" \"),s(\"p\",[a._v(\"举个栗子：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-txt extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"\\\\d{3}\\\\s+\\\\d{3,8}  \\n\\\\d{3}(三个数字)，例如123  \\n\\\\s(一个空格)，\\\\s+表示至少有一个空格，例如匹配' ' ,'\\\\t\\\\t'\\n\\\\d{3,8}(3-8个数字),例如21354\\n\\n注：-是特殊字符，需要用'\\\\'转义，例如010-12345的正则是\\\\d{3}\\\\-\\\\d{3,8}  \\n\\n如果要做更精确的匹配，需要用[]表示范围\\n\\n[0-9a-zA-Z\\\\_]匹配一个数组、字母或下划线\\n[0-9a-zA-Z\\\\_]+匹配至少由一个数字、字母或者下划线组成的字符串，比如a201,_0e,2k09\\n[a-zA-z\\\\_\\\\$][0-9a-zA-Z\\\\_\\\\$]*可以匹配由字母或下划线、$开头，后接任意个由数字、字母或者下划线、$组成的字符串\\n[a-zA-z\\\\_\\\\$][0-9a-zA-Z\\\\_\\\\$]{0,19},更精确地限制了变量的长度是1-20个字符（前面一个字符+后面最多19个字符）  \\nA|B可以匹配A或B  \\n^表示行的开头，^\\\\d表示必须以数字开头  \\n$表示行的结束，\\\\d$表示必须以数字结束\\n\")])])]),s(\"p\",[a._v(\"写法：/正则表达式/\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"var\")]),a._v(\" re1 \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token regex\"}},[a._v(\"/ABC\\\\-001/\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"var\")]),a._v(\" re2 \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"new\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"RegExp\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v(\"'ABC\\\\\\\\-001'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n\\n\")])])])])},[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}