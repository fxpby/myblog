"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5490],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var l=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=l.createContext({}),u=function(e){var t=l.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return l.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},p=l.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,k=p["".concat(o,".").concat(m)]||p[m]||d[m]||i;return n?l.createElement(k,a(a({ref:t},c),{},{components:n})):l.createElement(k,a({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=p;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return l.createElement.apply(null,a)}return l.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1771:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var l=n(7462),r=(n(7294),n(3905));const i={id:"merge-two-sorted-lists",title:"21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868",tags:["\u94fe\u8868","\u8fed\u4ee3","\u9012\u5f52"]},a=void 0,s={unversionedId:"leetcode/linkedList/merge-two-sorted-lists",id:"leetcode/linkedList/merge-two-sorted-lists",title:"21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868",description:"\u9898\u76ee\u63cf\u8ff0",source:"@site/docs/leetcode/linkedList/merge-two-sorted-lists.md",sourceDirName:"leetcode/linkedList",slug:"/leetcode/linkedList/merge-two-sorted-lists",permalink:"/myblog/docs/leetcode/linkedList/merge-two-sorted-lists",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode/linkedList/merge-two-sorted-lists.md",tags:[{label:"\u94fe\u8868",permalink:"/myblog/docs/tags/\u94fe\u8868"},{label:"\u8fed\u4ee3",permalink:"/myblog/docs/tags/\u8fed\u4ee3"},{label:"\u9012\u5f52",permalink:"/myblog/docs/tags/\u9012\u5f52"}],version:"current",frontMatter:{id:"merge-two-sorted-lists",title:"21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868",tags:["\u94fe\u8868","\u8fed\u4ee3","\u9012\u5f52"]},sidebar:"leetcode",previous:{title:"237. \u5220\u9664\u94fe\u8868\u4e2d\u7684\u8282\u70b9",permalink:"/myblog/docs/leetcode/linkedList/delete-node-in-a-linked-list"},next:{title:"203. \u79fb\u9664\u94fe\u8868\u5143\u7d20",permalink:"/myblog/docs/leetcode/linkedList/remove-linked-list-elements"}},o={},u=[{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0",level:2},{value:"\u89e3\u9898\u65b9\u6cd5",id:"\u89e3\u9898\u65b9\u6cd5",level:2},{value:"\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52",id:"\u65b9\u6cd5\u4e00\u9012\u5f52",level:3},{value:"\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3",id:"\u65b9\u6cd5\u4e8c\u8fed\u4ee3",level:3}],c={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u9898\u76ee\u63cf\u8ff0"},"\u9898\u76ee\u63cf\u8ff0"),(0,r.kt)("p",null,"\u5c06\u4e24\u4e2a\u5347\u5e8f\u94fe\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684 \u5347\u5e8f \u94fe\u8868\u5e76\u8fd4\u56de\u3002\u65b0\u94fe\u8868\u662f\u901a\u8fc7\u62fc\u63a5\u7ed9\u5b9a\u7684\u4e24\u4e2a\u94fe\u8868\u7684\u6240\u6709\u8282\u70b9\u7ec4\u6210\u7684\u3002"),(0,r.kt)("p",null,"\u793a\u4f8b 1\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"\u8f93\u5165\uff1al1 = [1,2,4], l2 = [1,3,4]\n\u8f93\u51fa\uff1a[1,1,2,3,4,4]\n")),(0,r.kt)("p",null,"\u793a\u4f8b 2\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"\u8f93\u5165\uff1al1 = [], l2 = []\n\u8f93\u51fa\uff1a[]\n")),(0,r.kt)("p",null,"\u793a\u4f8b 3\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"\u8f93\u5165\uff1al1 = [], l2 = [0]\n\u8f93\u51fa\uff1a[0]\n")),(0,r.kt)("h2",{id:"\u89e3\u9898\u65b9\u6cd5"},"\u89e3\u9898\u65b9\u6cd5"),(0,r.kt)("h3",{id:"\u65b9\u6cd5\u4e00\u9012\u5f52"},"\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6b65\u9aa4",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u4ece\u94fe\u8868\u5934\u90e8\u5f00\u59cb\u6bd4\u8f83\u5927\u5c0f\uff0c\u5c0f\u7684\u5c31\u662f\u5408\u5e76\u540e\u65b0\u94fe\u8868\u7684\u6700\u5c0f\u503c,\u518d\u7528\u8f83\u5c0f\u7684 ",(0,r.kt)("inlineCode",{parentName:"li"},"next.val")," \u548c\u8f83\u5927\u7684 ",(0,r.kt)("inlineCode",{parentName:"li"},"val")," \u6bd4\u8f83\u9012\u5f52"),(0,r.kt)("li",{parentName:"ul"},"\u82e5\u4e24\u4e2a\u94fe\u8868\u6709\u4e00\u4e2a\u4e3a\u7a7a\uff0c\u7ed3\u675f\u9012\u5f52"))),(0,r.kt)("li",{parentName:"ul"},"\u590d\u6742\u5ea6\u5206\u6790",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n + m),n\uff0cm \u5206\u522b\u4e3a\u4e24\u4e2a\u94fe\u8868\u957f\u5ea6\uff0c\u6bcf\u6b21\u9012\u5f52\u90fd\u4f1a\u53bb\u6389 list1 \u6216 list2 \u7684\u5934\u8282\u70b9\u76f4\u81f3\u81f3\u5c11\u4e00\u4e2a\u94fe\u8868\u4e3a\u7a7a"),(0,r.kt)("li",{parentName:"ul"},"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n + m),n\uff0cm \u5206\u522b\u4e3a\u4e24\u4e2a\u94fe\u8868\u957f\u5ea6,\u9012\u5f52\u8c03\u7528\u6808\u7a7a\u95f4\u53d6\u51b3\u4e8e\u9012\u5f52\u7684\u6df1\u5ea6")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} list1\n * @param {ListNode} list2\n * @return {ListNode}\n */\nvar mergeTwoLists = function (list1, list2) {\n  if (list1 === null) {\n    return list2;\n  }\n  if (list2 === null) {\n    return list1;\n  }\n  if (list1.val <= list2.val) {\n    list1.next = mergeTwoLists(list1.next, list2);\n    return list1;\n  } else {\n    list2.next = mergeTwoLists(list2.next, list1);\n    return list2;\n  }\n};\n")),(0,r.kt)("h3",{id:"\u65b9\u6cd5\u4e8c\u8fed\u4ee3"},"\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6b65\u9aa4",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u521b\u5efa\u4e00\u4e2a\u65b0\u94fe\u8868"),(0,r.kt)("li",{parentName:"ul"},"\u6bd4\u8f83\u4e24\u4e2a\u94fe\u8868\u5934\uff0c\u628a\u5c0f\u7684\u5b58\u5165\u65b0\u94fe\u8868\uff0c\u5411\u540e\u79fb\u52a8\u4e00\u6b65"),(0,r.kt)("li",{parentName:"ul"},"\u82e5\u6709\u4e00\u4e2a\u94fe\u8868\u904d\u5386\u7ed3\u675f\u4e86\uff0c\u76f4\u63a5\u628a\u5269\u4f59\u90e8\u5206\u8ffd\u52a0\u5230\u65b0\u94fe\u8868\u5373\u53ef\uff08\u6709\u5e8f\uff09"))),(0,r.kt)("li",{parentName:"ul"},"\u590d\u6742\u5ea6\u5206\u6790",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n + m)"),(0,r.kt)("li",{parentName:"ul"},"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} list1\n * @param {ListNode} list2\n * @return {ListNode}\n */\nvar mergeTwoLists = function (list1, list2) {\n  const newList = new ListNode(0);\n  let cur = newList;\n  while (list1 && list2) {\n    if (list1.val <= list2.val) {\n      cur.next = list1;\n      list1 = list1.next;\n    } else {\n      cur.next = list2;\n      list2 = list2.next;\n    }\n    cur = cur.next;\n  }\n  cur.next = list1 ? list1 : list2;\n  return newList.next;\n};\n")))}d.isMDXComponent=!0}}]);