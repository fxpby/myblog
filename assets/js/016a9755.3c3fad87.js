"use strict";(self.webpackChunkmy_website_2=self.webpackChunkmy_website_2||[]).push([[4483],{28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>o});var t=r(96540);const i={},l=t.createContext(i);function s(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(l.Provider,{value:n},e.children)}},50453:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"coding/leetcode/tree/binary-tree-inorder-traversal","title":"94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386","description":"\u9898\u76ee\u63cf\u8ff0","source":"@site/docs/coding/leetcode/tree/binary-tree-inorder-traversal.md","sourceDirName":"coding/leetcode/tree","slug":"/coding/leetcode/tree/binary-tree-inorder-traversal","permalink":"/myblog/docs/coding/leetcode/tree/binary-tree-inorder-traversal","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/coding/leetcode/tree/binary-tree-inorder-traversal.md","tags":[{"inline":true,"label":"\u4e8c\u53c9\u6811","permalink":"/myblog/docs/tags/\u4e8c\u53c9\u6811"},{"inline":true,"label":"dfs","permalink":"/myblog/docs/tags/dfs"},{"inline":true,"label":"bfs","permalink":"/myblog/docs/tags/bfs"}],"version":"current","frontMatter":{"id":"binary-tree-inorder-traversal","title":"94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386","tags":["\u4e8c\u53c9\u6811","dfs","bfs"]},"sidebar":"tutorialSidebar","previous":{"title":"20.\u6709\u6548\u7684\u62ec\u53f7","permalink":"/myblog/docs/coding/leetcode/stack/valid-parentheses"},"next":{"title":"102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386","permalink":"/myblog/docs/coding/leetcode/tree/binary-tree-level-order-traversal"}}');var i=r(74848),l=r(28453);const s={id:"binary-tree-inorder-traversal",title:"94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386",tags:["\u4e8c\u53c9\u6811","dfs","bfs"]},o=void 0,d={},a=[{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0",level:2},{value:"\u89e3\u9898\u65b9\u6cd5",id:"\u89e3\u9898\u65b9\u6cd5",level:2},{value:"\u65b9\u6cd5\u4e00\uff1adfs",id:"\u65b9\u6cd5\u4e00dfs",level:3},{value:"\u65b9\u6cd5\u4e8c\uff1abfs",id:"\u65b9\u6cd5\u4e8cbfs",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\u9898\u76ee\u63cf\u8ff0",children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,i.jsx)(n.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 root \uff0c\u8fd4\u56de \u5b83\u7684 \u4e2d\u5e8f \u904d\u5386 \u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b 1\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"  1\n    \\\n    2\n    /\n  3\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"\u8f93\u5165\uff1aroot = [1,null,2,3]\n\u8f93\u51fa\uff1a[1,3,2]\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b 2\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"\u8f93\u5165\uff1aroot = []\n\u8f93\u51fa\uff1a[]\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b 3\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"\u8f93\u5165\uff1aroot = [1]\n\u8f93\u51fa\uff1a[1]\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u63d0\u793a\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u6811\u4e2d\u8282\u70b9\u6570\u76ee\u5728\u8303\u56f4 [0, 100] \u5185"}),"\n",(0,i.jsxs)(n.li,{children:["-100 ",(0,i.jsx)(n.code,{children:"<="})," Node.val ",(0,i.jsx)(n.code,{children:"<="})," 100"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u89e3\u9898\u65b9\u6cd5",children:"\u89e3\u9898\u65b9\u6cd5"}),"\n",(0,i.jsx)(n.h3,{id:"\u65b9\u6cd5\u4e00dfs",children:"\u65b9\u6cd5\u4e00\uff1adfs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar inorderTraversal = function (root) {\n  if (!root) {\n    return [];\n  }\n  const res = [];\n  const dfs = (node) => {\n    if (node.left) {\n      dfs(node.left);\n    }\n    res.push(node.val);\n    if (node.right) {\n      dfs(node.right);\n    }\n  };\n  dfs(root);\n  return res;\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u65b9\u6cd5\u4e8cbfs",children:"\u65b9\u6cd5\u4e8c\uff1abfs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar rightSideView = function (root) {\n  if (!root) {\n    return [];\n  }\n  const res = [];\n  const queue = [root];\n  while (queue.length) {\n    let len = queue.length;\n    while (len) {\n      const node = queue.shift();\n      if (len === 1) {\n        res.push(node.val);\n      }\n      if (node.left) {\n        queue.push(node.left);\n      }\n      if (node.right) {\n        queue.push(node.right);\n      }\n      len--;\n    }\n  }\n  return res;\n};\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar rightSideView = function (root) {\n  if (!root) {\n    return [];\n  }\n  const res = [];\n  const queue = [root];\n  while (queue.length) {\n    let len = queue.length;\n    for (let i = 0; i < len; i += 1) {\n      const node = queue.shift();\n      if (i === len - 1) {\n        res.push(node.val);\n      }\n      if (node.left) {\n        queue.push(node.left);\n      }\n      if (node.right) {\n        queue.push(node.right);\n      }\n    }\n  }\n  return res;\n};\n"})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);