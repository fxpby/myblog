"use strict";(self.webpackChunkmy_website_2=self.webpackChunkmy_website_2||[]).push([[8422],{28453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>r});var t=o(96540);const s={},l=t.createContext(s);function a(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(l.Provider,{value:n},e.children)}},35004:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"coding/typescript/basic/ts-symbol","title":"symbol","description":"\u8fed\u4ee3\u5668 Symbol.iterator","source":"@site/docs/coding/typescript/basic/ts-symbol.md","sourceDirName":"coding/typescript/basic","slug":"/coding/typescript/basic/ts-symbol","permalink":"/docs/coding/typescript/basic/ts-symbol","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/coding/typescript/basic/ts-symbol.md","tags":[{"inline":true,"label":"TypeScript","permalink":"/docs/tags/type-script"}],"version":"current","frontMatter":{"id":"ts-symbol","title":"symbol","tags":["TypeScript"]},"sidebar":"tutorialSidebar","previous":{"title":"\u539f\u59cb\u6570\u636e\u7c7b\u578b","permalink":"/docs/coding/typescript/basic/ts-primitive-data-types"},"next":{"title":"\u7c7b\u578b\u6ce8\u91ca","permalink":"/docs/coding/typescript/basic/ts-type-annotation"}}');var s=o(74848),l=o(28453);const a={id:"ts-symbol",title:"symbol",tags:["TypeScript"]},r=void 0,i={},c=[{value:"\u8fed\u4ee3\u5668 Symbol.iterator",id:"\u8fed\u4ee3\u5668-symboliterator",level:2},{value:"\u751f\u6210\u5668 for of",id:"\u751f\u6210\u5668-for-of",level:2}];function m(e){const n={code:"code",h2:"h2",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"let name1:symbol = Symbol('olu')\nlet name2:symbol = Symbol('olu')\n\nlet obj = {\n  [name1]: 'hhh',\n  [name2]: '111',\n  name: 'olu'\n}\n\nconsole.log(obj) // { [Symbol(olu)]: 'hhh', [Symbol(olu)]: '111' }\n\nfor(let key in obj) {\n  console.log(key) // name\n}\n\nconsole.log(Object.keys(obj)) // [ 'name' ]\nconsole.log(Object.getOwnPropertyNames(obj)) // [ 'name' ]\nconsole.log(JSON.stringify(obj)) // {\"name\":\"olu\"}\n\nconsole.log(Object.getOwnPropertySymbols(obj)) // [ Symbol(olu), Symbol(olu) ]\nconsole.log(Reflect.ownKeys(obj)) // [ 'name', Symbol(olu), Symbol(olu) ]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u8fed\u4ee3\u5668-symboliterator",children:"\u8fed\u4ee3\u5668 Symbol.iterator"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const arr:Array<number> = [4, 5, 6]\nconst it:Iterator<number> = arr[Symbol.iterator]()\nconsole.log(it.next()) // { value: 4, done: false }\nconsole.log(it.next()) // { value: 5, done: false }\nconsole.log(it.next()) // { value: 6, done: false }\nconsole.log(it.next()) // { value: undefined, done: true }\n\ntype mapK = string | number\ntype mapV = string | number\n\nconst set: Set<number> = new Set([1, 2, 3])\nconst map: Map<mapK, mapV> = new Map()\nmap.set('1', 'olu')\nmap.set('2', 'study')\nconsole.log(set) // Set(3) { 1, 2, 3 }\nconsole.log(map) // Map(2) { '1' => 'olu', '2' => 'study' }\n\nfunction gen(erg: any) {\n  let it:Iterator<any> = erg[Symbol.iterator]()\n  let next: any = { done: false }\n  while(!next.done) {\n    next = it.next()\n    if (!next.done) {\n      console.log(next)\n    }\n  }\n}\n\ngen(map) \n// { value: [ '1', 'olu' ], done: false } \n// { value: [ '2', 'study' ], done: false }\n\ngen(set) \n// { value: 1, done: false }\n// { value: 2, done: false }\n// { value: 3, done: false }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u751f\u6210\u5668-for-of",children:"\u751f\u6210\u5668 for of"})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}}}]);