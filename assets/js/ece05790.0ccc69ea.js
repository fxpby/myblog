"use strict";(self.webpackChunkmy_website_2=self.webpackChunkmy_website_2||[]).push([[4479],{21799:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"coding/leetcode/heap/merge-k-sorted-lists","title":"23. \u5408\u5e76K\u4e2a\u5347\u5e8f\u94fe\u8868","description":"\u9898\u76ee\u63cf\u8ff0","source":"@site/docs/coding/leetcode/heap/merge-k-sorted-lists.md","sourceDirName":"coding/leetcode/heap","slug":"/coding/leetcode/heap/merge-k-sorted-lists","permalink":"/docs/coding/leetcode/heap/merge-k-sorted-lists","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/coding/leetcode/heap/merge-k-sorted-lists.md","tags":[{"inline":true,"label":"\u5806","permalink":"/docs/tags/\u5806"},{"inline":true,"label":"\u5feb\u901f\u6392\u5e8f","permalink":"/docs/tags/\u5feb\u901f\u6392\u5e8f"}],"version":"current","frontMatter":{"id":"merge-k-sorted-lists","title":"23. \u5408\u5e76K\u4e2a\u5347\u5e8f\u94fe\u8868","tags":["\u5806","\u5feb\u901f\u6392\u5e8f"]},"sidebar":"tutorialSidebar","previous":{"title":"215. \u6570\u7ec4\u4e2d\u7684\u7b2cK\u4e2a\u6700\u5927\u5143\u7d20","permalink":"/docs/coding/leetcode/heap/kth-largest-element-in-an-array"},"next":{"title":"347. \u524d K \u4e2a\u9ad8\u9891\u5143\u7d20","permalink":"/docs/coding/leetcode/heap/top-k-frequent-elements"}}');var s=t(74848),r=t(28453);const a={id:"merge-k-sorted-lists",title:"23. \u5408\u5e76K\u4e2a\u5347\u5e8f\u94fe\u8868",tags:["\u5806","\u5feb\u901f\u6392\u5e8f"]},d=void 0,h={},o=[{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0",level:2}];function l(n){const e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{id:"\u9898\u76ee\u63cf\u8ff0",children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,s.jsx)(e.p,{children:"\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\u6570\u7ec4\uff0c\u6bcf\u4e2a\u94fe\u8868\u90fd\u5df2\u7ecf\u6309\u5347\u5e8f\u6392\u5217\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u8bf7\u4f60\u5c06\u6240\u6709\u94fe\u8868\u5408\u5e76\u5230\u4e00\u4e2a\u5347\u5e8f\u94fe\u8868\u4e2d\uff0c\u8fd4\u56de\u5408\u5e76\u540e\u7684\u94fe\u8868\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u793a\u4f8b 1\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"\u8f93\u5165\uff1alists = [[1,4,5],[1,3,4],[2,6]]\n\u8f93\u51fa\uff1a[1,1,2,3,4,4,5,6]\n\u89e3\u91ca\uff1a\u94fe\u8868\u6570\u7ec4\u5982\u4e0b\uff1a\n[\n  1->4->5,\n  1->3->4,\n  2->6\n]\n\u5c06\u5b83\u4eec\u5408\u5e76\u5230\u4e00\u4e2a\u6709\u5e8f\u94fe\u8868\u4e2d\u5f97\u5230\u3002\n1->1->2->3->4->4->5->6\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u793a\u4f8b 2\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"\u8f93\u5165\uff1alists = []\n\u8f93\u51fa\uff1a[]\n\u793a\u4f8b 3\uff1a\n\n\u8f93\u5165\uff1alists = [[]]\n\u8f93\u51fa\uff1a[]\n```\xa0\n\n\u63d0\u793a\uff1a\n\n- k == lists.length\n- 0 `<=` k `<=` 10^4\n- 0 `<=` lists[i].length `<=` 500\n- -10^4 `<=` lists[i][j] `<=` 10^4\n- lists[i] \u6309 \u5347\u5e8f \u6392\u5217\n- lists[i].length \u7684\u603b\u548c\u4e0d\u8d85\u8fc7 10^4\n\n## \u89e3\u9898\u65b9\u6cd5\n\n### \u65b9\u6cd5\u4e00\uff1a\u6700\u5c0f\u5806\n\n```js\n/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode[]} lists\n * @return {ListNode}\n */\nclass MinHeap {\n  constructor() {\n    this.heap = [];\n  }\n\n  swap(i1, i2) {\n    const temp = this.heap[i1];\n    this.heap[i1] = this.heap[i2];\n    this.heap[i2] = temp;\n  }\n\n  getParentIndex(index) {\n    return (index - 1) >> 1;\n  }\n\n  shiftUp(index) {\n    if (index === 0) {\n      return;\n    }\n    const parentIndex = this.getParentIndex(index);\n    if (\n      this.heap[parentIndex] &&\n      this.heap[parentIndex].val > this.heap[index].val\n    ) {\n      this.swap(parentIndex, index);\n      this.shiftUp(parentIndex);\n    }\n  }\n\n  insert(value) {\n    this.heap.push(value);\n    this.shiftUp(this.heap.length - 1);\n  }\n\n  getLeftIndex(index) {\n    return index * 2 + 1;\n  }\n\n  getRightIndex(index) {\n    return index * 2 + 2;\n  }\n\n  shiftDown(index) {\n    const getLeftIndex = this.getLeftIndex(index);\n    const getRightIndex = this.getRightIndex(index);\n    if (\n      this.heap[getLeftIndex] &&\n      this.heap[getLeftIndex].val < this.heap[index].val\n    ) {\n      this.swap(getLeftIndex, index);\n      this.shiftDown(getLeftIndex);\n    }\n    if (\n      this.heap[getRightIndex] &&\n      this.heap[getRightIndex].val < this.heap[index].val\n    ) {\n      this.swap(getRightIndex, index);\n      this.shiftDown(getRightIndex);\n    }\n  }\n\n  pop() {\n    if (this.size() === 0) {\n      return\n    }\n    if (this.size() === 1) {\n      return this.heap.shift()\n    }\n    const top = this.heap[0]\n    this.heap[0] = this.heap.pop()\n    this.shiftDown(0)\n    return top\n  }\n\n  findMinimum () {\n    return this.size() === 0 ? undefined : this.heap[0]\n  }\n\n  peek() {\n    return this.heap[0];\n  }\n\n  size() {\n    return this.heap.length;\n  }\n}\nvar mergeKLists = function(lists) {\n  const h = new MinHeap()\n  const res = new ListNode(0)\n  let p = res\n  lists.forEach(x => {\n    if(x) {\n      h.insert(x)\n    }\n  })\n  while (h.size()) {\n    const n = h.pop()\n    p.next = n\n    p = p.next\n    if (n.next) {\n      h.insert(n.next)\n    }\n  }\n  return res.next\n};\n"})})]})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>d});var i=t(96540);const s={},r=i.createContext(s);function a(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);