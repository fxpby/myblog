"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7880],{3905:(e,t,r)=>{r.d(t,{Zo:()=>i,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},i=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),d=c(r),f=a,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||l;return r?n.createElement(m,o(o({ref:t},i),{},{components:r})):n.createElement(m,o({ref:t},i))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<l;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9965:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const l={id:"same-tree",title:"100. \u76f8\u540c\u7684\u6811",tags:["\u4e8c\u53c9\u6811","dfs","bfs"]},o=void 0,s={unversionedId:"leetcode/tree/same-tree",id:"leetcode/tree/same-tree",title:"100. \u76f8\u540c\u7684\u6811",description:"\u9898\u76ee\u63cf\u8ff0",source:"@site/docs/leetcode/tree/same-tree.md",sourceDirName:"leetcode/tree",slug:"/leetcode/tree/same-tree",permalink:"/myblog/docs/leetcode/tree/same-tree",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode/tree/same-tree.md",tags:[{label:"\u4e8c\u53c9\u6811",permalink:"/myblog/docs/tags/\u4e8c\u53c9\u6811"},{label:"dfs",permalink:"/myblog/docs/tags/dfs"},{label:"bfs",permalink:"/myblog/docs/tags/bfs"}],version:"current",frontMatter:{id:"same-tree",title:"100. \u76f8\u540c\u7684\u6811",tags:["\u4e8c\u53c9\u6811","dfs","bfs"]}},p={},c=[{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0",level:2},{value:"\u89e3\u9898\u65b9\u6cd5",id:"\u89e3\u9898\u65b9\u6cd5",level:2},{value:"\u65b9\u6cd5\u4e00\uff1adfs",id:"\u65b9\u6cd5\u4e00dfs",level:3}],i={toc:c};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u9898\u76ee\u63cf\u8ff0"},"\u9898\u76ee\u63cf\u8ff0"),(0,a.kt)("p",null,"\u7ed9\u4f60\u4e24\u68f5\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 p \u548c q \uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u68c0\u9a8c\u8fd9\u4e24\u68f5\u6811\u662f\u5426\u76f8\u540c\u3002\n\u5982\u679c\u4e24\u4e2a\u6811\u5728\u7ed3\u6784\u4e0a\u76f8\u540c\uff0c\u5e76\u4e14\u8282\u70b9\u5177\u6709\u76f8\u540c\u7684\u503c\uff0c\u5219\u8ba4\u4e3a\u5b83\u4eec\u662f\u76f8\u540c\u7684\u3002"),(0,a.kt)("p",null,"\u793a\u4f8b 1\uff1a\n",(0,a.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2020/12/20/ex1.jpg",alt:"ex1"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"\u8f93\u5165\uff1ap = [1,2,3], q = [1,2,3]\n\u8f93\u51fa\uff1atrue\n")),(0,a.kt)("p",null,"\u793a\u4f8b 2\uff1a\n",(0,a.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2020/12/20/ex2.jpg",alt:"ex2"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"\u8f93\u5165\uff1ap = [1,2], q = [1,null,2]\n\u8f93\u51fa\uff1afalse\n")),(0,a.kt)("p",null,"\u793a\u4f8b 3\uff1a\n",(0,a.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2020/12/20/ex3.jpg",alt:"ex3"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"\u8f93\u5165\uff1ap = [1,2,1], q = [1,1,2]\n\u8f93\u51fa\uff1afalse\n")),(0,a.kt)("p",null,"\u63d0\u793a\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e24\u68f5\u6811\u4e0a\u7684\u8282\u70b9\u6570\u76ee\u90fd\u5728\u8303\u56f4 ","[0, 100]"," \u5185"),(0,a.kt)("li",{parentName:"ul"},"-104 <= Node.val <= 104")),(0,a.kt)("h2",{id:"\u89e3\u9898\u65b9\u6cd5"},"\u89e3\u9898\u65b9\u6cd5"),(0,a.kt)("h3",{id:"\u65b9\u6cd5\u4e00dfs"},"\u65b9\u6cd5\u4e00\uff1adfs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} p\n * @param {TreeNode} q\n * @return {boolean}\n */\nvar isSameTree = function (p, q) {\n  if (p === null && q === null) {\n    return true;\n  }\n  if (p === null || q === null) {\n    return false;\n  }\n  if (p.val !== q.val) {\n    return false;\n  }\n  return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);\n};\n")))}u.isMDXComponent=!0}}]);