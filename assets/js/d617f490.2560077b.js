"use strict";(self.webpackChunkmy_website_2=self.webpackChunkmy_website_2||[]).push([[5684],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>h});var s=t(96540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function h(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}},31270:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>h,default:()=>o,frontMatter:()=>r,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"coding/leetcode/heap/top-k-frequent-elements","title":"347. \u524d K \u4e2a\u9ad8\u9891\u5143\u7d20","description":"\u9898\u76ee\u63cf\u8ff0","source":"@site/docs/coding/leetcode/heap/top-k-frequent-elements.md","sourceDirName":"coding/leetcode/heap","slug":"/coding/leetcode/heap/top-k-frequent-elements","permalink":"/docs/coding/leetcode/heap/top-k-frequent-elements","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/coding/leetcode/heap/top-k-frequent-elements.md","tags":[{"inline":true,"label":"\u5806","permalink":"/docs/tags/\u5806"},{"inline":true,"label":"\u5feb\u901f\u6392\u5e8f","permalink":"/docs/tags/\u5feb\u901f\u6392\u5e8f"}],"version":"current","frontMatter":{"id":"top-k-frequent-elements","title":"347. \u524d K \u4e2a\u9ad8\u9891\u5143\u7d20","tags":["\u5806","\u5feb\u901f\u6392\u5e8f"]},"sidebar":"tutorialSidebar","previous":{"title":"23. \u5408\u5e76K\u4e2a\u5347\u5e8f\u94fe\u8868","permalink":"/docs/coding/leetcode/heap/merge-k-sorted-lists"},"next":{"title":"2. \u4e24\u6570\u76f8\u52a0","permalink":"/docs/coding/leetcode/linkedList/add-two-numbers"}}');var i=t(74848),a=t(28453);const r={id:"top-k-frequent-elements",title:"347. \u524d K \u4e2a\u9ad8\u9891\u5143\u7d20",tags:["\u5806","\u5feb\u901f\u6392\u5e8f"]},h=void 0,d={},p=[{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0",level:2},{value:"\u89e3\u9898\u65b9\u6cd5",id:"\u89e3\u9898\u65b9\u6cd5",level:2},{value:"\u65b9\u6cd5\u4e00\uff1a\u6700\u5c0f\u5806",id:"\u65b9\u6cd5\u4e00\u6700\u5c0f\u5806",level:3},{value:"\u65b9\u6cd5\u4e8c\uff1a\u6570\u7ec4",id:"\u65b9\u6cd5\u4e8c\u6570\u7ec4",level:3}];function l(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\u9898\u76ee\u63cf\u8ff0",children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,i.jsx)(n.p,{children:"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570 k \uff0c\u8bf7\u4f60\u8fd4\u56de\u5176\u4e2d\u51fa\u73b0\u9891\u7387\u524d k \u9ad8\u7684\u5143\u7d20\u3002\u4f60\u53ef\u4ee5\u6309 \u4efb\u610f\u987a\u5e8f \u8fd4\u56de\u7b54\u6848\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b 1:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"\u8f93\u5165: (nums = [1, 1, 1, 2, 2, 3]), (k = 2);\n\u8f93\u51fa: [1, 2];\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b 2:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"\u8f93\u5165: (nums = [1]), (k = 1);\n\u8f93\u51fa: [1];\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u63d0\u793a\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["1 ",(0,i.jsx)(n.code,{children:"<="})," nums.length ",(0,i.jsx)(n.code,{children:"<="})," 105"]}),"\n",(0,i.jsx)(n.li,{children:"k \u7684\u53d6\u503c\u8303\u56f4\u662f [1, \u6570\u7ec4\u4e2d\u4e0d\u76f8\u540c\u7684\u5143\u7d20\u7684\u4e2a\u6570]"}),"\n",(0,i.jsx)(n.li,{children:"\u9898\u76ee\u6570\u636e\u4fdd\u8bc1\u7b54\u6848\u552f\u4e00\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6570\u7ec4\u4e2d\u524d k \u4e2a\u9ad8\u9891\u5143\u7d20\u7684\u96c6\u5408\u662f\u552f\u4e00\u7684"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u8fdb\u9636\uff1a\u4f60\u6240\u8bbe\u8ba1\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6 \u5fc5\u987b \u4f18\u4e8e O(n log n) \uff0c\u5176\u4e2d n\xa0 \u662f\u6570\u7ec4\u5927\u5c0f\u3002"}),"\n",(0,i.jsx)(n.h2,{id:"\u89e3\u9898\u65b9\u6cd5",children:"\u89e3\u9898\u65b9\u6cd5"}),"\n",(0,i.jsx)(n.h3,{id:"\u65b9\u6cd5\u4e00\u6700\u5c0f\u5806",children:"\u65b9\u6cd5\u4e00\uff1a\u6700\u5c0f\u5806"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number[]}\n */\n\nclass MinHeap {\n  constructor() {\n    this.heap = [];\n  }\n\n  swap(i1, i2) {\n    const temp = this.heap[i1];\n    this.heap[i1] = this.heap[i2];\n    this.heap[i2] = temp;\n  }\n\n  getParentIndex(index) {\n    return (index - 1) >> 1;\n  }\n\n  shiftUp(index) {\n    if (index === 0) {\n      return;\n    }\n    const parentIndex = this.getParentIndex(index);\n    if (\n      this.heap[parentIndex] &&\n      this.heap[parentIndex].value > this.heap[index].value\n    ) {\n      this.swap(parentIndex, index);\n      this.shiftUp(parentIndex);\n    }\n  }\n\n  insert(value) {\n    this.heap.push(value);\n    this.shiftUp(this.heap.length - 1);\n  }\n\n  getLeftIndex(index) {\n    return index * 2 + 1;\n  }\n\n  getRightIndex(index) {\n    return index * 2 + 2;\n  }\n\n  shiftDown(index) {\n    const getLeftIndex = this.getLeftIndex(index);\n    const getRightIndex = this.getRightIndex(index);\n    if (\n      this.heap[getLeftIndex] &&\n      this.heap[getLeftIndex].value < this.heap[index].value\n    ) {\n      this.swap(getLeftIndex, index);\n      this.shiftDown(getLeftIndex);\n    }\n    if (\n      this.heap[getRightIndex] &&\n      this.heap[getRightIndex].value < this.heap[index].value\n    ) {\n      this.swap(getRightIndex, index);\n      this.shiftDown(getRightIndex);\n    }\n  }\n\n  pop() {\n    if (this.size() === 0) {\n      return;\n    }\n    if (this.size() === 1) {\n      return this.heap.shift();\n    }\n    const top = this.heap[0];\n    this.heap[0] = this.heap.pop();\n    this.shiftDown(0);\n    return top;\n  }\n\n  peek() {\n    return this.heap[0];\n  }\n\n  size() {\n    return this.heap.length;\n  }\n}\nvar topKFrequent = function (nums, k) {\n  const map = new Map();\n  nums.forEach((x) => {\n    map.set(x, map.has(x) ? map.get(x) + 1 : 1);\n  });\n  const h = new MinHeap();\n  map.forEach((value, key) => {\n    h.insert({ value, key });\n    if (h.size() > k) {\n      h.pop();\n    }\n  });\n  return h.heap.map((x) => x.key);\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u65b9\u6cd5\u4e8c\u6570\u7ec4",children:"\u65b9\u6cd5\u4e8c\uff1a\u6570\u7ec4"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number[]}\n */\nvar topKFrequent = function (nums, k) {\n  const map = new Map();\n  nums.forEach((x) => {\n    map.set(x, map.has(x) ? map.get(x) + 1 : 1);\n  });\n  return Array.from(map)\n    .sort((a, b) => b[1] - a[1])\n    .map((x) => x[0])\n    .slice(0, k);\n};\n"})})]})}function o(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);