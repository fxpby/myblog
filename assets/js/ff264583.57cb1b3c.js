"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9237],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>s});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),g=c(t),s=a,d=g["".concat(p,".").concat(s)]||g[s]||u[s]||l;return t?r.createElement(d,i(i({ref:n},m),{},{components:t})):r.createElement(d,i({ref:n},m))}));function s(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=g;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},20491:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const l={id:"min-triangle-path-sum",title:"120. \u4e09\u89d2\u5f62\u6700\u5c0f\u8def\u5f84\u548c",tags:["\u52a8\u6001\u89c4\u5212"]},i=void 0,o={unversionedId:"leetcode/dynamic-programming/min-triangle-path-sum",id:"leetcode/dynamic-programming/min-triangle-path-sum",title:"120. \u4e09\u89d2\u5f62\u6700\u5c0f\u8def\u5f84\u548c",description:"\u7ed9\u5b9a\u4e00\u4e2a\u4e09\u89d2\u5f62 triangle \uff0c\u627e\u51fa\u81ea\u9876\u5411\u4e0b\u7684\u6700\u5c0f\u8def\u5f84\u548c\u3002",source:"@site/docs/leetcode/dynamic-programming/min-triangle-path-sum.md",sourceDirName:"leetcode/dynamic-programming",slug:"/leetcode/dynamic-programming/min-triangle-path-sum",permalink:"/myblog/docs/leetcode/dynamic-programming/min-triangle-path-sum",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode/dynamic-programming/min-triangle-path-sum.md",tags:[{label:"\u52a8\u6001\u89c4\u5212",permalink:"/myblog/docs/tags/\u52a8\u6001\u89c4\u5212"}],version:"current",frontMatter:{id:"min-triangle-path-sum",title:"120. \u4e09\u89d2\u5f62\u6700\u5c0f\u8def\u5f84\u548c",tags:["\u52a8\u6001\u89c4\u5212"]}},p={},c=[{value:"\u89e3\u9898\u65b9\u6cd5",id:"\u89e3\u9898\u65b9\u6cd5",level:2},{value:"\u65b9\u6cd5\u4e00\uff1a\u52a8\u6001\u89c4\u5212",id:"\u65b9\u6cd5\u4e00\u52a8\u6001\u89c4\u5212",level:3},{value:"\u65b9\u6cd5\u4e8c\uff1a\u52a8\u6001\u89c4\u5212 + \u7a7a\u95f4\u538b\u7f29",id:"\u65b9\u6cd5\u4e8c\u52a8\u6001\u89c4\u5212--\u7a7a\u95f4\u538b\u7f29",level:3}],m={toc:c};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u4e09\u89d2\u5f62 triangle \uff0c\u627e\u51fa\u81ea\u9876\u5411\u4e0b\u7684\u6700\u5c0f\u8def\u5f84\u548c\u3002"),(0,a.kt)("p",null,"\u6bcf\u4e00\u6b65\u53ea\u80fd\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\u4e2d\u76f8\u90bb\u7684\u7ed3\u70b9\u4e0a\u3002\u76f8\u90bb\u7684\u7ed3\u70b9 \u5728\u8fd9\u91cc\u6307\u7684\u662f \u4e0b\u6807 \u4e0e \u4e0a\u4e00\u5c42\u7ed3\u70b9\u4e0b\u6807 \u76f8\u540c\u6216\u8005\u7b49\u4e8e \u4e0a\u4e00\u5c42\u7ed3\u70b9\u4e0b\u6807 + 1 \u7684\u4e24\u4e2a\u7ed3\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6b63\u4f4d\u4e8e\u5f53\u524d\u884c\u7684\u4e0b\u6807 i \uff0c\u90a3\u4e48\u4e0b\u4e00\u6b65\u53ef\u4ee5\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\u7684\u4e0b\u6807 i \u6216 i + 1 \u3002"),(0,a.kt)("p",null,"\u793a\u4f8b 1\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"\u8f93\u5165\uff1atriangle = [[2],[3,4],[6,5,7],[4,1,8,3]]\n\u8f93\u51fa\uff1a11\n\u89e3\u91ca\uff1a\u5982\u4e0b\u9762\u7b80\u56fe\u6240\u793a\uff1a\n   2\n  3 4\n 6 5 7\n4 1 8 3\n\u81ea\u9876\u5411\u4e0b\u7684\u6700\u5c0f\u8def\u5f84\u548c\u4e3a 11\uff08\u5373\uff0c2 + 3 + 5 + 1 = 11\uff09\u3002\n")),(0,a.kt)("p",null,"\u793a\u4f8b 2\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"\u8f93\u5165\uff1atriangle = [[-10]]\n\u8f93\u51fa\uff1a-10\n")),(0,a.kt)("p",null,"\u63d0\u793a\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"1 <= triangle.length <= 200"),(0,a.kt)("li",{parentName:"ul"},"triangle","[0]",".length == 1"),(0,a.kt)("li",{parentName:"ul"},"triangle","[i]",".length == triangle","[i - 1]",".length + 1"),(0,a.kt)("li",{parentName:"ul"},"-10^4 <= ",(0,a.kt)("inlineCode",{parentName:"li"},"triangle[i][j]")," <= 10^4")),(0,a.kt)("h2",{id:"\u89e3\u9898\u65b9\u6cd5"},"\u89e3\u9898\u65b9\u6cd5"),(0,a.kt)("h3",{id:"\u65b9\u6cd5\u4e00\u52a8\u6001\u89c4\u5212"},"\u65b9\u6cd5\u4e00\uff1a\u52a8\u6001\u89c4\u5212"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[][]} triangle\n * @return {number}\n */\nvar minimumTotal = function(triangle) {\n  if (triangle.length === 1) {\n    return triangle[0][0]\n  }\n  const level = triangle.length\n\n  const dp = [...triangle].map(item => item.map(i => i))\n  for (let i = level - 2; i >= 0; i --) {\n    for (let j = 0; j < triangle[i].length; j += 1) {\n      dp[i][j] = triangle[i][j] + Math.min(dp[i + 1][j], dp[i + 1][j + 1])\n    }\n  }\n  return dp[0][0]\n};\n")),(0,a.kt)("h3",{id:"\u65b9\u6cd5\u4e8c\u52a8\u6001\u89c4\u5212--\u7a7a\u95f4\u538b\u7f29"},"\u65b9\u6cd5\u4e8c\uff1a\u52a8\u6001\u89c4\u5212 + \u7a7a\u95f4\u538b\u7f29"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var minimumTotal = function(triangle) {\n  if (triangle.length === 1) {\n    return triangle[0][0]\n  }\n  const level = triangle.length\n\n  const dp = [...triangle[level - 1]]\n  for (let i = level - 2; i >= 0; i --) {\n    for (let j = 0; j < triangle[i].length; j += 1) {\n      dp[j] = triangle[i][j] + Math.min(dp[j], dp[j + 1])\n    }\n  }\n  return dp[0]\n};\n")))}u.isMDXComponent=!0}}]);