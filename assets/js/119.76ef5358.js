(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{544:function(e,n,r){"use strict";r.r(n);var t=r(32),s=Object(t.a)({},(function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"源码学习-准备工作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#源码学习-准备工作"}},[e._v("#")]),e._v(" 源码学习 - 准备工作")]),e._v(" "),r("h2",{attrs:{id:"目录结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[e._v("#")]),e._v(" 目录结构")]),e._v(" "),r("p",[e._v("├── benchmarks                  性能、基准测试\n├── dist                        构建打包的输出目录\n├── examples                    案例目录\n├── flow                        flow 语法的类型声明\n├── packages                    一些额外的包，比如：负责服务端渲染的包 vue-server-renderer、配合 vue-loader 使用的的 vue-template-compiler，还有 weex 相关的\n│   ├── vue-server-renderer\n│   ├── vue-template-compiler\n│   ├── weex-template-compiler\n│   └── weex-vue-framework\n├── scripts                     所有的配置文件的存放位置，比如 rollup 的配置文件\n├── src                         vue 源码目录\n│   ├── compiler                编译器\n│   ├── core                    运行时的核心包\n│   │   ├── components          全局组件，比如 keep-alive\n│   │   ├── global-api          全局 API，比如熟悉的：Vue.use()、Vue.component() 等\n│   │   ├── instance            Vue 实例相关的，比如 Vue 构造函数就在这个目录下\n│   │   ├── observer            响应式原理\n│   │   ├── util                工具方法\n│   │   └── vdom                虚拟 DOM 相关，比如熟悉的 patch 算法就在这儿\n│   ├── platforms               平台相关的编译器代码\n│   │   ├── web\n│   │   └── weex\n│   ├── server                  服务端渲染相关\n│   ├── sfc                     解释器，Vue 文件 => JavaScript 对象\n│   ├── shared                  辅助方法（和其他目录共享的常量、工具方法）\n├── test                        测试目录\n├── types                       TS 类型声明")])])}),[],!1,null,null,null);n.default=s.exports}}]);