"use strict";(self.webpackChunkmy_website_2=self.webpackChunkmy_website_2||[]).push([[7252],{28453:(e,n,l)=>{l.d(n,{R:()=>s,x:()=>c});var t=l(96540);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}},62823:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>s,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"coding/leetcode/tree/symmetric-tree","title":"101. \u5bf9\u79f0\u4e8c\u53c9\u6811","description":"\u9898\u76ee\u63cf\u8ff0","source":"@site/docs/coding/leetcode/tree/symmetric-tree.md","sourceDirName":"coding/leetcode/tree","slug":"/coding/leetcode/tree/symmetric-tree","permalink":"/myblog/docs/coding/leetcode/tree/symmetric-tree","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/coding/leetcode/tree/symmetric-tree.md","tags":[{"inline":true,"label":"\u4e8c\u53c9\u6811","permalink":"/myblog/docs/tags/\u4e8c\u53c9\u6811"},{"inline":true,"label":"dfs","permalink":"/myblog/docs/tags/dfs"},{"inline":true,"label":"bfs","permalink":"/myblog/docs/tags/bfs"}],"version":"current","frontMatter":{"id":"symmetric-tree","title":"101. \u5bf9\u79f0\u4e8c\u53c9\u6811","tags":["\u4e8c\u53c9\u6811","dfs","bfs"]},"sidebar":"tutorialSidebar","previous":{"title":"100. \u76f8\u540c\u7684\u6811","permalink":"/myblog/docs/coding/leetcode/tree/same-tree"},"next":{"title":"98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811","permalink":"/myblog/docs/coding/leetcode/tree/validate-binary-search-tree"}}');var r=l(74848),i=l(28453);const s={id:"symmetric-tree",title:"101. \u5bf9\u79f0\u4e8c\u53c9\u6811",tags:["\u4e8c\u53c9\u6811","dfs","bfs"]},c=void 0,d={},o=[{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0",level:2},{value:"\u89e3\u9898\u65b9\u6cd5",id:"\u89e3\u9898\u65b9\u6cd5",level:2},{value:"\u65b9\u6cd5\u4e00\uff1adfs",id:"\u65b9\u6cd5\u4e00dfs",level:3},{value:"\u65b9\u6cd5\u4e8c: bfs",id:"\u65b9\u6cd5\u4e8c-bfs",level:3}];function h(e){const n={code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"\u9898\u76ee\u63cf\u8ff0",children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,r.jsx)(n.p,{children:"\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 root \uff0c \u68c0\u67e5\u5b83\u662f\u5426\u8f74\u5bf9\u79f0\u3002"}),"\n",(0,r.jsxs)(n.p,{children:["\u793a\u4f8b 1\uff1a\n",(0,r.jsx)(n.img,{src:"https://assets.leetcode.com/uploads/2021/02/19/symtree1.jpg",alt:"symtree1"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"\u8f93\u5165\uff1aroot = [1,2,2,3,4,4,3]\n\u8f93\u51fa\uff1atrue\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u793a\u4f8b 2\uff1a\n",(0,r.jsx)(n.img,{src:"https://assets.leetcode.com/uploads/2021/02/19/symtree2.jpg",alt:"symtree2"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"\u8f93\u5165\uff1aroot = [1,2,2,null,3,null,3]\n\u8f93\u51fa\uff1afalse\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u63d0\u793a\uff1a"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u6811\u4e2d\u8282\u70b9\u6570\u76ee\u5728\u8303\u56f4 [1, 1000] \u5185"}),"\n",(0,r.jsxs)(n.li,{children:["-100 ",(0,r.jsx)(n.code,{children:"<="})," Node.val ",(0,r.jsx)(n.code,{children:"<="})," 100"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\u89e3\u9898\u65b9\u6cd5",children:"\u89e3\u9898\u65b9\u6cd5"}),"\n",(0,r.jsx)(n.h3,{id:"\u65b9\u6cd5\u4e00dfs",children:"\u65b9\u6cd5\u4e00\uff1adfs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u601d\u8def\uff1a"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff0c\u5224\u65ad\u4e8c\u53c9\u6811\u662f\u5426\u4e3a\u955c\u50cf\u7684\u8bdd\uff0c\u9700\u8981\u6bd4\u8f83\u5b50\u6811\u7684\u5bf9\u79f0\u4f4d\u7f6e\u662f\u5426\u76f8\u540c\uff0c\u5373\u5de6\u5b50\u6811\u7684\u5de6\u4fa7\u4e0e\u53f3\u5b50\u6811\u7684\u53f3\u4fa7\uff0c\u5de6\u5b50\u6811\u7684\u53f3\u4fa7\u548c\u53f3\u5b50\u6811\u7684\u5de6\u4fa7"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u6b65\u9aa4\uff1a"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u5224\u65ad\u4e24\u68f5\u6811\u8282\u70b9","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u90fd\u4e3a\u7a7a\u5219\u76f8\u540c"}),"\n",(0,r.jsx)(n.li,{children:"\u4e00\u4e2a\u4e3a\u7a7a\u53e6\u4e00\u4e2a\u4e0d\u4e3a\u7a7a\uff0c\u4e0d\u540c"}),"\n",(0,r.jsx)(n.li,{children:"\u8282\u70b9\u90fd\u6709\u503c\u4f46\u662f val \u4e0d\u540c\uff0c\u4e0d\u540c"}),"\n",(0,r.jsx)(n.li,{children:"\u9012\u5f52\u4ed6\u4eec\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u590d\u6742\u5ea6\u5206\u6790\uff1a"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)"}),"\n",(0,r.jsx)(n.li,{children:"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u9012\u5f52\u5c42\u6570"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {boolean}\n */\nvar isSymmetric = function (root) {\n  const dfs = (left, right) => {\n    if (left === null && right === null) {\n      return true;\n    }\n    if (left === null || right === null) {\n      return false;\n    }\n    if (left.val !== right.val) {\n      return false;\n    }\n    return dfs(left.left, right.right) && dfs(left.right, right.left);\n  };\n  return dfs(root.left, root.right);\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"\u65b9\u6cd5\u4e8c-bfs",children:"\u65b9\u6cd5\u4e8c: bfs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u601d\u8def\uff1a"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff0c\u5c06\u4e92\u4e3a\u955c\u50cf\u7684\u8282\u70b9\u52a0\u5165\u961f\u5217\u6bd4\u8f83"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u6b65\u9aa4\uff1a"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u521d\u59cb\u5316\u961f\u5217\uff0c\u5165\u961f\u6839\u8282\u70b9\u7684\u5de6\u8282\u70b9\u548c\u53f3\u8282\u70b9"}),"\n",(0,r.jsx)(n.li,{children:"\u53d6\u961f\u5934\u524d\u4e24\u9879\uff0c\u6bd4\u8f83\u503c"}),"\n",(0,r.jsx)(n.li,{children:"\u5c06\u4e24\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u8282\u70b9\u6309\u7167\u76f8\u53cd\u7684\u987a\u5e8f\u63d2\u5165\u961f\u5217"}),"\n",(0,r.jsx)(n.li,{children:"\u5f53\u961f\u5217\u4e3a\u7a7a\u65f6\u6216\u8005\u6bd4\u8f83\u7684\u8282\u70b9\u503c\u4e0d\u540c\u65f6\uff0c\u7ed3\u675f\u5faa\u73af"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u590d\u6742\u5ea6\u5206\u6790\uff1a"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)"}),"\n",(0,r.jsx)(n.li,{children:"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u961f\u5217\u957f\u5ea6"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {boolean}\n */\nvar isSymmetric = function (root) {\n  const queue = [root.left, root.right];\n  while (queue.length) {\n    const left = queue.shift();\n    const right = queue.shift();\n    if (left === null && right === null) {\n      continue;\n    }\n    if (left === null || right === null) {\n      return false;\n    }\n    if (left.val !== right.val) {\n      return false;\n    }\n    queue.push(left.left, right.right);\n    queue.push(left.right, right.left);\n  }\n  return true;\n};\n"})})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);