"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9585],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>c});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var h=i.createContext({}),o=function(e){var n=i.useContext(h),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=o(e.components);return i.createElement(h.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,h=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=o(t),c=a,x=u["".concat(h,".").concat(c)]||u[c]||l[c]||r;return t?i.createElement(x,s(s({ref:n},d),{},{components:t})):i.createElement(x,s({ref:n},d))}));function c(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,s=new Array(r);s[0]=u;var p={};for(var h in n)hasOwnProperty.call(n,h)&&(p[h]=n[h]);p.originalType=e,p.mdxType="string"==typeof e?e:a,s[1]=p;for(var o=2;o<r;o++)s[o]=t[o];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7995:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>p,toc:()=>o});var i=t(7462),a=(t(7294),t(3905));const r={id:"heap",title:"\u5806",tags:["\u5806"]},s=void 0,p={unversionedId:"data-structures/heap/heap",id:"data-structures/heap/heap",title:"\u5806",description:"\u6700\u5c0f\u5806",source:"@site/docs/data-structures/heap/heap.md",sourceDirName:"data-structures/heap",slug:"/data-structures/heap/",permalink:"/myblog/docs/data-structures/heap/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/data-structures/heap/heap.md",tags:[{label:"\u5806",permalink:"/myblog/docs/tags/\u5806"}],version:"current",frontMatter:{id:"heap",title:"\u5806",tags:["\u5806"]},sidebar:"data-structures",previous:{title:"\u4e8c\u53c9\u641c\u7d22\u6811",permalink:"/myblog/docs/data-structures/tree/binary-search-tree"},next:{title:"graph",permalink:"/myblog/docs/data-structures/graph/"}},h={},o=[{value:"\u6700\u5c0f\u5806",id:"\u6700\u5c0f\u5806",level:2},{value:"\u63d2\u5165",id:"\u63d2\u5165",level:3},{value:"\u5220\u9664\u5806\u9876",id:"\u5220\u9664\u5806\u9876",level:3},{value:"\u83b7\u53d6\u5806\u9876\u548c\u5806\u7684\u5927\u5c0f",id:"\u83b7\u53d6\u5806\u9876\u548c\u5806\u7684\u5927\u5c0f",level:3}],d={toc:o};function l(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,i.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u6700\u5c0f\u5806"},"\u6700\u5c0f\u5806"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"class MinHeap {\n  constructor() {\n    this.heap = []\n  }\n\n  swap(i1, i2) {\n    const temp = this.heap[i1]\n    this.heap[i1] = this.heap[i2]\n    this.heap[i2] = temp\n  }\n}\n")),(0,a.kt)("h3",{id:"\u63d2\u5165"},"\u63d2\u5165"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5c06\u503c\u63d2\u5165\u5806\u7684\u5e95\u90e8\uff08\u6570\u7ec4\u5c3e\u90e8\uff09"),(0,a.kt)("li",{parentName:"ul"},"\u4e0a\u79fb\uff0c\u5c06\u6b64\u503c\u548c\u5b83\u7684\u7236\u8282\u70b9\u8fdb\u884c\u4ea4\u6362\uff0c\u76f4\u5230\u7236\u8282\u70b9\u5c0f\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u63d2\u5165\u7684\u503c"),(0,a.kt)("li",{parentName:"ul"},"\u5927\u5c0f\u4e3a k \u7684\u5806\u4e2d\u63d2\u5165\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(logk)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"class MinHeap {\n  constructor() {\n    this.heap = []\n  }\n\n  swap(i1, i2) {\n    const temp = this.heap[i1]\n    this.heap[i1] = this.heap[i2]\n    this.heap[i2] = temp\n  }\n\n  getParentIndex (index) {\n    return (index - 1) >> 1\n  }\n\n  shiftUp(index) {\n    if (index === 0) {\n      return\n    }\n    const parentIndex = this.getParentIndex(index)\n    if (this.heap[parentIndex] > this.heap[index]) {\n      this.swap(parentIndex, index)\n      this.shiftUp(parentIndex)\n    }\n  }\n\n  insert(value) {\n    this.heap.push(value)\n    this.shiftUp(this.heap.length - 1)\n  }\n}\n\nconst minHeap = new MinHeap()\nminHeap.insert(3)\nminHeap.insert(2)\nminHeap.insert(1)\nconsole.log(minHeap.heap)\n")),(0,a.kt)("h3",{id:"\u5220\u9664\u5806\u9876"},"\u5220\u9664\u5806\u9876"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u7528\u6570\u7ec4\u5c3e\u90e8\u5143\u7d20\u66ff\u6362\u5806\u9876"),(0,a.kt)("li",{parentName:"ul"},"\u4e0b\u79fb\uff0c\u5c06\u65b0\u5806\u9876\u548c\u5b83\u7684\u5b50\u8282\u70b9\u8fdb\u884c\u4ea4\u6362\uff0c\u76f4\u5230\u5b50\u8282\u70b9\u5927\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u65b0\u5806\u9876"),(0,a.kt)("li",{parentName:"ul"},"\u5927\u5c0f\u4e3a k \u7684\u5806\u4e2d\u5220\u9664\u5806\u9876\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(logk)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"class MinHeap {\n  constructor() {\n    this.heap = []\n  }\n\n  swap(i1, i2) {\n    const temp = this.heap[i1]\n    this.heap[i1] = this.heap[i2]\n    this.heap[i2] = temp\n  }\n\n  getParentIndex (index) {\n    return (index - 1) >> 1\n  }\n\n  shiftUp(index) {\n    if (index === 0) {\n      return\n    }\n    const parentIndex = this.getParentIndex(index)\n    if (this.heap[parentIndex] > this.heap[index]) {\n      this.swap(parentIndex, index)\n      this.shiftUp(parentIndex)\n    }\n  }\n\n  insert(value) {\n    this.heap.push(value)\n    this.shiftUp(this.heap.length - 1)\n  }\n\n  getLeftIndex(index) {\n    return index * 2 + 1\n  }\n\n  getRightIndex(index) {\n    return index * 2 + 2\n  }\n\n  shiftDown(index) {\n    const getLeftIndex = this.getLeftIndex(index)\n    const getRightIndex = this.getRightIndex(index)\n    if (this.heap[getLeftIndex] < this.heap[index]) {\n      this.swap(getLeftIndex, index)\n      this.shiftDown(getLeftIndex)\n    }\n    if (this.heap[getRightIndex] < this.heap[index]) {\n      this.swap(getRightIndex, index)\n      this.shiftDown(getRightIndex)\n    }\n  }\n\n  pop() {\n    this.heap[0] = this.heap.pop()\n    this.shiftDown(0)\n  }\n}\n\nconst minHeap = new MinHeap()\nminHeap.insert(3)\nminHeap.insert(2)\nminHeap.insert(1)\nminHeap.pop()\nconsole.log(minHeap.heap)\n")),(0,a.kt)("h3",{id:"\u83b7\u53d6\u5806\u9876\u548c\u5806\u7684\u5927\u5c0f"},"\u83b7\u53d6\u5806\u9876\u548c\u5806\u7684\u5927\u5c0f"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u83b7\u53d6\u5806\u9876\uff1a\u8fd4\u56de\u6570\u7ec4\u5934\u90e8"),(0,a.kt)("li",{parentName:"ul"},"\u83b7\u53d6\u5806\u7684\u5927\u5c0f\uff1a\u8fd4\u56de\u6570\u7ec4\u957f\u5ea6")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"class MinHeap {\n  constructor() {\n    this.heap = []\n  }\n\n  swap(i1, i2) {\n    const temp = this.heap[i1]\n    this.heap[i1] = this.heap[i2]\n    this.heap[i2] = temp\n  }\n\n  getParentIndex (index) {\n    return (index - 1) >> 1\n  }\n\n  shiftUp(index) {\n    if (index === 0) {\n      return\n    }\n    const parentIndex = this.getParentIndex(index)\n    if (this.heap[parentIndex] > this.heap[index]) {\n      this.swap(parentIndex, index)\n      this.shiftUp(parentIndex)\n    }\n  }\n\n  insert(value) {\n    this.heap.push(value)\n    this.shiftUp(this.heap.length - 1)\n  }\n\n  getLeftIndex(index) {\n    return index * 2 + 1\n  }\n\n  getRightIndex(index) {\n    return index * 2 + 2\n  }\n\n  shiftDown(index) {\n    const getLeftIndex = this.getLeftIndex(index)\n    const getRightIndex = this.getRightIndex(index)\n    if (this.heap[getLeftIndex] < this.heap[index]) {\n      this.swap(getLeftIndex, index)\n      this.shiftDown(getLeftIndex)\n    }\n    if (this.heap[getRightIndex] < this.heap[index]) {\n      this.swap(getRightIndex, index)\n      this.shiftDown(getRightIndex)\n    }\n  }\n\n  pop() {\n    this.heap[0] = this.heap.pop()\n    this.shiftDown(0)\n  }\n\n  peek () {\n    return this.heap[0]\n  }\n\n  size() {\n    return this.heap.length\n  }\n}\n\nconst minHeap = new MinHeap()\nminHeap.insert(3)\nminHeap.insert(2)\nminHeap.insert(1)\nminHeap.pop()\nconsole.log(minHeap.heap)\n")))}l.isMDXComponent=!0}}]);