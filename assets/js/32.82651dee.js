(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{446:function(t,a,s){"use strict";s.r(a);var r=s(32),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"责任链模式-chain-of-responsibility-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#责任链模式-chain-of-responsibility-pattern"}},[t._v("#")]),t._v(" 责任链模式 Chain of Responsibility Pattern")]),t._v(" "),s("h2",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("ul",[s("li",[t._v("使多个对象都有机会处理请求，从而避免请求的发送者和接收者直接的耦合关系")]),t._v(" "),s("li",[t._v("将多个对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止")])]),t._v(" "),s("h2",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),s("h3",{attrs:{id:"售卖电脑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#售卖电脑"}},[t._v("#")]),t._v(" 售卖电脑")]),t._v(" "),s("p",[t._v("假设有一个负责售卖电脑的电商网站，经过分别交纳 500 元定金和 200 元定金的两轮预定后（订单已经生成），现在已经到了正式购买的阶段。")]),t._v(" "),s("p",[t._v("公司针对支付过定金的用户有优惠政策。正式购买后，已经支付过 500 元定金的用户会收到 100 元的商城优惠券，支付过 200 元定金的用户可以收到 50 元的优惠券，没有支付定金的用户没有优惠券，且库存有限时不一定保证买到。")]),t._v(" "),s("p",[t._v("后端给我们返回的数据有")]),t._v(" "),s("ul",[s("li",[t._v("orderType：订单类型（定金购买或者普通购买），1 为 支付 500 元定金，2 为支付 200 元定金，3 为未支付定金普通购买。")]),t._v(" "),s("li",[t._v("pay: 是否已经支付定金。true 为用户已经支付定金，false 为用户提交定金订单但却没有支付定金，降级为未支付定金普通购买模式")]),t._v(" "),s("li",[t._v("stock: 普通购买商品的库存数量，支付定金的用户不受此限制")])])])}),[],!1,null,null,null);a.default=e.exports}}]);